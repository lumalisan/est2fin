00001108 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 28/09/2018 9:22:15

00000000                             1  ; =============================================================================
00000000                             2  ; TITLE    : EXAMPLE GAME
00000000                             3  ; AUTHOR   :
00000000                             4  ; CREATION :
00000000                             5  ; =============================================================================
00000000                             6  
00001000                             7              ORG     $1000
00001000                             8  
00001000                             9  ; --- CODE INCLUDES -----------------------------------------------------------
00001000                            10  
00001000                            11              INCLUDE "SYSCONST.X68"          ; SYSTEM CONSTANTS
00001000                            12  ; =============================================================================
00001000                            13  ; SYSTEM CONSTANTS
00001000                            14  ; =============================================================================
00001000                            15  
00001000                            16  ; --- TRAP RELATED CONSTANTS --------------------------------------------------
00001000                            17  
00001000  =00000000                 18  KBDTRAP     EQU     0                       ; KEYBOARD UPDATE TRAP
00001000  =00000001                 19  SCRTRAP     EQU     1                       ; SCREEN REFRESH TRAP
00001000                            20  
00001000                            21  ; --- KEY CODES (EASy68K)
00001000                            22  
00001000  =00000020                 23  KBDCHRSP    EQU     $20                     ; SPACE KEY
00001000  =0000004D                 24  KBDCHRMK    EQU     'M'                     ; M KEY
00001000  =00000010                 25  KBDCHRSH    EQU     $10                     ; SHIFT KEY
00001000  =00000050                 26  KBDCHRPK    EQU     'P'                     ; P KEY
00001000  =00000025                 27  KBDCHRLF    EQU     $25                     ; LEFT KEY
00001000  =00000026                 28  KBDCHRUP    EQU     $26                     ; UP KEY
00001000  =00000027                 29  KBDCHRRT    EQU     $27                     ; RIGHT KEY
00001000  =00000028                 30  KBDCHRDN    EQU     $28                     ; DOWN KEY
00001000                            31  
00001000                            32  ; --- KEYBOARD MAPPING --------------------------------------------------------
00001000                            33  
00001000  =00000025                 34  KBDLEFT     EQU     KBDCHRLF                ; LEFT BUTTON
00001000  =00000026                 35  KBDUP       EQU     KBDCHRUP                ; UP BUTTON
00001000  =00000027                 36  KBDRIGHT    EQU     KBDCHRRT                ; RIGHT BUTTON
00001000  =00000028                 37  KBDDOWN     EQU     KBDCHRDN                ; DOWN BUTTON
00001000  =00000020                 38  KBDFIRE1    EQU     KBDCHRSP                ; FIRE 1 BUTTON
00001000  =0000004D                 39  KBDFIRE2    EQU     KBDCHRMK                ; FIRE 2 BUTTON
00001000  =00000010                 40  KBDFIRE3    EQU     KBDCHRSH                ; FIRE 3 BUTTON
00001000  =00000050                 41  KBDPAUSE    EQU     KBDCHRPK                ; PAUSE BUTTON
00001000                            42  
00001000                            43  ; --- KEYBOARD BITFIELD MASKS -------------------------------------------------
00001000                            44  ; CONVENIENCE CONSTANTS TO ACCESS THE FOLLOWING BIT-FIELD.
00001000                            45  ; THIS BIT-FIELD IS USED BY SYSTEM VARS (KBDVAL) AND (KBDEDGE).
00001000                            46  ; +---+---+---+---+---+---+---+---+
00001000                            47  ; | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
00001000                            48  ; +---+---+---+---+---+---+---+---+
00001000                            49  ;   |   |   |   |   |   |   |   |
00001000                            50  ;   |   |   |   |   |   |   |   +---------- LEFT BUTTON
00001000                            51  ;   |   |   |   |   |   |   +-------------- UP BUTTON
00001000                            52  ;   |   |   |   |   |   +------------------ RIGHT BUTTON
00001000                            53  ;   |   |   |   |   +---------------------- DOWN BUTTON
00001000                            54  ;   |   |   |   +-------------------------- FIRE 1 BUTTON
00001000                            55  ;   |   |   +------------------------------ FIRE 2 BUTTON
00001000                            56  ;   |   +---------------------------------- FIRE 3 BUTTON
00001000                            57  ;   +-------------------------------------- PAUSE BUTTON
00001000                            58  
00001000  =00000001                 59  KBDMSKLF    EQU     %00000001
00001000  =00000002                 60  KBDMSKUP    EQU     %00000010
00001000  =00000004                 61  KBDMSKRT    EQU     %00000100
00001000  =00000008                 62  KBDMSKDN    EQU     %00001000
00001000  =00000010                 63  KBDMSKF1    EQU     %00010000
00001000  =00000020                 64  KBDMSKF2    EQU     %00100000
00001000  =00000040                 65  KBDMSKF3    EQU     %01000000
00001000  =00000080                 66  KBDMSKPS    EQU     %10000000
00001000                            67  
00001000                            68  ; --- KEYBOARD BITFIELD POSITIONS ---------------------------------------------
00001000                            69  
00001000  =00000000                 70  KBDBITLF    EQU     0
00001000  =00000001                 71  KBDBITUP    EQU     1
00001000  =00000002                 72  KBDBITRT    EQU     2
00001000  =00000003                 73  KBDBITDN    EQU     3
00001000  =00000004                 74  KBDBITF1    EQU     4
00001000  =00000005                 75  KBDBITF2    EQU     5
00001000  =00000006                 76  KBDBITF3    EQU     6
00001000  =00000007                 77  KBDBITPS    EQU     7
00001000                            78  
00001000                            79  ; --- SCREEN RELATED CONSTANTS ------------------------------------------------
00001000                            80  
00001000  =00000280                 81  SCRWIDTH    EQU     640                     ; SCREEN WIDTH (PIXELS)
00001000  =000001E0                 82  SCRHEIGH    EQU     480                     ; SCREEN HEIGHT (PIXELS)
00001000  =00000001                 83  SCRIRQ      EQU     1                       ; SCREEN INTERRUPT NUMBER
00001000  =00000014                 84  SCRTIM      EQU     20                      ; SCREEN TIMER (MS)
00001000                            85  
00001000                            86  ; --- DYNAMIC MEMORY CONSTANTS ------------------------------------------------
00001000                            87  
00001000  =00000040                 88  DMMBSIZE    EQU     64                      ; BLOCK SIZE (BYTES). POWER OF TWO
00001000  =00000032                 89  DMMBNUM     EQU     50                      ; NUMBER OF BLOCKS
00001000  =00000000                 90  DMMSYSID    EQU     0                       ; SYSTEM OWNER ID (MUST BE 0)
00001000  =00000000                 91  -------------------- end include --------------------
00001000                            92              INCLUDE "SYSTEM.X68"            ; SYSTEM CODE
00001000                            93  ; =============================================================================
00001000                            94  ; SYSTEM MANAGEMENT (SYSTEM CODE)
00001000                            95  ; =============================================================================
00001000                            96  
00001000                            97  ; -----------------------------------------------------------------------------
00001000                            98  SYSINIT
00001000                            99  ; INITIALIZES THE SYSTEM
00001000                           100  ; INPUT    - NONE
00001000                           101  ; OUTPUT   - NONE
00001000                           102  ; MODIFIES - NONE
00001000                           103  ; -----------------------------------------------------------------------------
00001000  205F                     104              MOVE.L  (A7)+,A0                ; GET RETURN ADDRESS
00001002  4EB9 0000102E            105              JSR     KBDINIT                 ; INIT KEYBOARD
00001008  4EB9 0000101C            106              JSR     SCRINIT                 ; INIT SCREEN
0000100E  4EB9 00001046            107              JSR     DMMINIT                 ; INIT DYNAMIC MEMORY
00001014  027C DFFF                108              ANDI.W  #$DFFF,SR               ; SWITCH TO USER
00001018  2F08                     109              MOVE.L  A0,-(A7)                ; PUT RETURN ADDRESS
0000101A  4E75                     110              RTS
0000101C                           111  
0000101C                           112  ; =============================================================================
0000101C                           113  ; SCREEN MANAGEMENT (SYSTEM CODE)
0000101C                           114  ; =============================================================================
0000101C                           115  
0000101C                           116  ; -----------------------------------------------------------------------------
0000101C                           117  SCRINIT
0000101C                           118  ; INITIALIZES THE SCREEN, SCREEN-RELATED INTERRUPT AND VARS.
0000101C                           119  ; INPUT    - NONE
0000101C                           120  ; OUTPUT   - NONE
0000101C                           121  ; MODIFIES - D0,D1,D2,D3
0000101C                           122  ; -----------------------------------------------------------------------------
0000101C                           123              ; TO DO:
0000101C                           124              ; - DISABLE INTS (SET INT BITS IN SR TO 111)
0000101C                           125              ; - DISABLE ALL AUTO-IRQ (SEE TRAP #15 TASK 32)
0000101C                           126              ; - INSTALL SCRUPD INTO TRAP SCRTRAP
0000101C                           127              ; - SET RESOLUTION TO SCRWIDTH X SCRHEIGHT
0000101C                           128              ; - SET WINDOWED MODE
0000101C                           129              ; - CLEAR VISIBLE BUFFER
0000101C                           130              ; - ENABLE DOUBLE BUFFER
0000101C                           131              ; - CLEAR HIDDEN BUFFER
0000101C                           132              ; - INSTALL SCRISR FOR IRQ SCRIRQ (IRQ INTERRUPT VECTOR BEGINS
0000101C                           133              ;   AT $60. INSTALLATION IS SIMILAR TO TRAP INSTALLATION)
0000101C                           134              ; - ENABLE AUTO-IRQ EVERY SCRTIM MS FOR IRQ SCRIRQ (SEE TRAP #15
0000101C                           135              ;   TASK 32)
0000101C                           136              ; - CLEAR SCRINTCT AND SCRCYCCT
0000101C                           137              ; - ENABLE INTS (SET INT BITS IN SR TO 000)
0000101C  4E75                     138              RTS
0000101E                           139  
0000101E                           140  ; -----------------------------------------------------------------------------
0000101E                           141  SCRISR
0000101E                           142  ; SCREEN TIMER ISR. INCREASES THE INTERRUPT COUNTER AND UPDATES DOUBLE BUFFER.
0000101E                           143  ; INPUT    - NONE
0000101E                           144  ; OUTPUT   - NONE
0000101E                           145  ; MODIFIES - NONE
0000101E                           146  ; -----------------------------------------------------------------------------
0000101E  5239 00001126            147              ADDQ.B  #1,(SCRINTCT)           ; UPDATE INT FLAG/COUNTER
00001024  5239 00001127            148              ADDQ.B  #1,(SCRCYCCT)           ; UPDATE CYCLE COUNTER
0000102A  4E73                     149              RTE
0000102C                           150  
0000102C                           151  ; -----------------------------------------------------------------------------
0000102C                           152  SCRUPD
0000102C                           153  ; TRAP SERVICE ROUTINE IN CHARGE OF VISUALIZING CURRENT FRAME AND CLEARING
0000102C                           154  ; BUFFER FOR THE NEXT ONE.
0000102C                           155  ; INPUT    - NONE
0000102C                           156  ; OUTPUT   - NONE
0000102C                           157  ; MODIFIES - NONE
0000102C                           158  ; -----------------------------------------------------------------------------
0000102C                           159              ; TO DO: UPDATE DOUBLE BUFFER AND CLEAR HIDDEN BUFFER
0000102C  4E73                     160              RTE
0000102E                           161  
0000102E                           162  ; =============================================================================
0000102E                           163  ; KEYBOARD MANAGEMENT (SYSTEM CODE)
0000102E                           164  ; =============================================================================
0000102E                           165  
0000102E                           166  ; -----------------------------------------------------------------------------
0000102E                           167  KBDINIT
0000102E                           168  ; INITIALIZES THE SYSTEM VARIABLES KBDSYS AND KBDVAL
0000102E                           169  ; INPUT    - NONE
0000102E                           170  ; OUTPUT   - NONE
0000102E                           171  ; MODIFIES - NONE
0000102E                           172  ; -----------------------------------------------------------------------------
0000102E  4239 00001124            173              CLR.B   (KBDVAL)                ; INIT VARS
00001034  4239 00001125            174              CLR.B   (KBDEDGE)
0000103A  21FC 00001044 0080       175              MOVE.L  #KBDREAD,($80+KBDTRAP*4) ; INSTALL
00001042  4E75                     176              RTS
00001044                           177  
00001044                           178  ; -----------------------------------------------------------------------------
00001044                           179  KBDREAD
00001044                           180  ; TRAP SERVICE ROUTINE.
00001044                           181  ; UPDATES THE SYSTEM VARIABLES KBDEDGE AND KBDVAL ACCORDING TO THE BITFIELD
00001044                           182  ; DESCRIBED IN SYSCONST. KBDVAL HOLDS THE CURRENT VALUES AND KBDEFGE HOLDS
00001044                           183  ; RISING EDGES FROM PREVIOUS CALL TO THE CURRENT ONE.
00001044                           184  ; INPUT    - NONE
00001044                           185  ; OUTPUT   - (KBDVAL) AND (KBDEDGE)
00001044                           186  ; MODIFIES - NONE
00001044                           187  ; -----------------------------------------------------------------------------
00001044                           188              ; TO DO: UPDATE KBDVAL AND KBDEDGE
00001044  4E73                     189              RTE
00001046                           190  
00001046                           191  ; =============================================================================
00001046                           192  ; DYNAMIC MEMORY MANAGEMENT (SYSTEM CODE)
00001046                           193  ; DYNAMIC MEMORY IS A SET OF DMMBNUM SLOTS OF DMMBSIZE BYTES EACH ONE.
00001046                           194  ; DMMBSIZE MUST BE POWER OF TWO. A SLOT HAS:
00001046                           195  ; - HEADER - 1 WORD. SPECIFIES THE OWNER (0 MEANS OWNED BY SYSTEM)
00001046                           196  ; - DATA   - DMMBSIZE - 2 BYTES. MAY CONTAIN VARS AND ANY KIND OF DATA RELATED
00001046                           197  ;            THE THE OWNER. IF OWNER==0, DATA IS MEANINGLESS.
00001046                           198  ; =============================================================================
00001046                           199  
00001046                           200  ; -----------------------------------------------------------------------------
00001046                           201  DMMINIT
00001046                           202  ; INITIALIZES THE DYNAMIC MEMORY TO ALL OWNED BY SYSTEM.
00001046                           203  ; INPUT    - NONE
00001046                           204  ; OUTPUT   - NONE
00001046                           205  ; MODIFIES - NONE
00001046                           206  ; -----------------------------------------------------------------------------
00001046  48E7 8080                207              MOVEM.L D0/A0,-(A7)
0000104A  41F9 00001140            208              LEA     DMMDATA,A0
00001050  303C 0031                209              MOVE.W  #DMMBNUM-1,D0
00001054  30BC 0000                210  .LOOP       MOVE.W  #DMMSYSID,(A0)
00001058  D1FC 00000040            211              ADD.L   #DMMBSIZE,A0
0000105E  51C8 FFF4                212              DBRA.W  D0,.LOOP
00001062  4CDF 0101                213              MOVEM.L (A7)+,D0/A0
00001066  4E75                     214              RTS
00001068                           215  
00001068                           216  ; -----------------------------------------------------------------------------
00001068                           217  DMMFIRST
00001068                           218  ; SEARCHES THE FIRST MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
00001068                           219  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001068                           220  ; INPUT    - NONE
00001068                           221  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001068                           222  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001068                           223  ; -----------------------------------------------------------------------------
00001068  41F9 00001140            224              LEA     DMMDATA,A0
0000106E  4A58                     225  DMMFRLOP    TST.W   (A0)+
00001070  6600 0016                226              BNE     DMMFRFND
00001074  D1FC 0000003E            227              ADD.L   #DMMBSIZE-2,A0
0000107A  B1FC 00001DBF            228  DMMFRCOM    CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
00001080  6DEC                     229              BLT     DMMFRLOP
00001082  207C 00000000            230              MOVE.L  #0,A0
00001088  4E75                     231  DMMFRFND    RTS
0000108A                           232  
0000108A                           233  ; -----------------------------------------------------------------------------
0000108A                           234  DMMNEXT
0000108A                           235  ; SEARCHES THE NEXT MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
0000108A                           236  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000108A                           237  ; INPUT    - A0   : POINTER WITHIN THE CURRENT SLOT
0000108A                           238  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000108A                           239  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000108A                           240  ; -----------------------------------------------------------------------------
0000108A  2F00                     241              MOVE.L  D0,-(A7)
0000108C  2008                     242              MOVE.L  A0,D0
0000108E  C0BC FFFFFFC0            243              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
00001094  0680 00000040            244              ADD.L   #DMMBSIZE,D0
0000109A  2040                     245              MOVE.L  D0,A0
0000109C  201F                     246              MOVE.L  (A7)+,D0
0000109E  60DA                     247              BRA     DMMFRCOM
000010A0                           248  
000010A0                           249  ; -----------------------------------------------------------------------------
000010A0                           250  DMMFRSTO
000010A0                           251  ; SEARCHES THE FIRST MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
000010A0                           252  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
000010A0                           253  ; INPUT    - D0.W : ID TO SEARCH
000010A0                           254  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
000010A0                           255  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000010A0                           256  ; -----------------------------------------------------------------------------
000010A0  41F9 00001140            257              LEA     DMMDATA,A0
000010A6  B058                     258  DMMFLOOP    CMP.W   (A0)+,D0
000010A8  6700 0016                259              BEQ     DMMFFND
000010AC  D1FC 0000003E            260              ADD.L   #DMMBSIZE-2,A0
000010B2  B1FC 00001DBF            261  DMMFCOM     CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
000010B8  6DEC                     262              BLT     DMMFLOOP
000010BA  207C 00000000            263              MOVE.L  #0,A0
000010C0  4E75                     264  DMMFFND     RTS
000010C2                           265  
000010C2                           266  ; -----------------------------------------------------------------------------
000010C2                           267  DMMNEXTO
000010C2                           268  ; SEARCHES THE NEXT MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
000010C2                           269  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
000010C2                           270  ; INPUT    - D0.W : ID TO SEARCH
000010C2                           271  ;            A0   : POINTER WITHIN THE CURRENT SLOT
000010C2                           272  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
000010C2                           273  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000010C2                           274  ; -----------------------------------------------------------------------------
000010C2  2F00                     275              MOVE.L  D0,-(A7)
000010C4  2008                     276              MOVE.L  A0,D0
000010C6  C0BC FFFFFFC0            277              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000010CC  0680 00000040            278              ADD.L   #DMMBSIZE,D0
000010D2  2040                     279              MOVE.L  D0,A0
000010D4  201F                     280              MOVE.L  (A7)+,D0
000010D6  60DA                     281              BRA     DMMFCOM
000010D8                           282  
000010D8                           283  ; -----------------------------------------------------------------------------
000010D8                           284  DMMALLOC
000010D8                           285  ; SEARCHES THE FIRST FREE (SYS OWNED) SLOT, ASSIGNS TO THE SPECIFIED OWNER
000010D8                           286  ; AND RETURNS A POINTER TO THE CORRESPONDING DATA (SLOT ADDRESS + 2)
000010D8                           287  ; INPUT    - D0.W : ID TO ASSIGN
000010D8                           288  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FREE SPACE
000010D8                           289  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000010D8                           290  ; -----------------------------------------------------------------------------
000010D8  3F00                     291              MOVE.W  D0,-(A7)
000010DA  4240                     292              CLR.W   D0
000010DC  4EB8 10A0                293              JSR     DMMFRSTO
000010E0  301F                     294              MOVE.W  (A7)+,D0
000010E2  B1FC 00000000            295              CMP.L   #0,A0
000010E8  6700 0006                296              BEQ     .END
000010EC  3140 FFFE                297              MOVE.W  D0,-2(A0)
000010F0  4E75                     298  .END        RTS
000010F2                           299  
000010F2                           300  ; -----------------------------------------------------------------------------
000010F2                           301  DMMFREE
000010F2                           302  ; FREES THE SLOT TO WHICH THE PROVIDED POINTER BELONGS BY SETTING ITS OWNED TO
000010F2                           303  ; SYSTEM (0)
000010F2                           304  ; INPUT    - A0   : POINTER BELONGING TO THE SLOT TO FREE
000010F2                           305  ; OUTPUT   - NONE
000010F2                           306  ; MODIFIES - NONE
000010F2                           307  ; -----------------------------------------------------------------------------
000010F2  48E7 8080                308              MOVEM.L D0/A0,-(A7)
000010F6  2008                     309              MOVE.L  A0,D0
000010F8  C0BC FFFFFFC0            310              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000010FE  2040                     311              MOVE.L  D0,A0
00001100  4250                     312              CLR.W   (A0)
00001102  4CDF 0101                313              MOVEM.L (A7)+,D0/A0
00001106  4E75                     314              RTS
00001108                           315  
00001108                           316  
00001108                           317  
00001108                           318  -------------------- end include --------------------
00001108                           319              ; TO DO: PUT YOUR GAME-RELATED INCLUDES HERE
00001108                           320  
00001108                           321  ; --- INITIALIZE --------------------------------------------------------------
00001108                           322  
00001108  4EB8 1000                323  START       JSR     SYSINIT
0000110C                           324              ; TO DO: CALL GAME INITIALIZATION CODE HERE
0000110C                           325  
0000110C                           326  ; --- UPDATE ------------------------------------------------------------------
0000110C                           327  
0000110C  4E40                     328  .LOOP       TRAP    #KBDTRAP                ; READ KEYBOARD
0000110E                           329              ; TO DO: CALL GAME UPDATE CODE HERE
0000110E                           330  
0000110E                           331  ; --- WAIT SYNCH --------------------------------------------------------------
0000110E                           332  
0000110E  4A39 00001126            333  .WINT       TST.B   (SCRINTCT)              ; WAIT FOR INTERRUPT
00001114  67F8                     334              BEQ     .WINT
00001116  4239 00001126            335              CLR.B   (SCRINTCT)
0000111C                           336  
0000111C                           337  ; --- PLOT --------------------------------------------------------------------
0000111C                           338  
0000111C                           339              ; TO DO: CALL GAME PLOT CODE HERE
0000111C  4E41                     340              TRAP    #SCRTRAP                ; SHOW GRAPHICS
0000111E  60EC                     341              BRA     .LOOP
00001120  FFFF FFFF                342              SIMHALT
00001124                           343  
00001124                           344  ; --- VARIABLES ---------------------------------------------------------------
00001124                           345  
00001124                           346              INCLUDE "SYSVAR.X68"
00001124                           347  ; =============================================================================
00001124                           348  ; SYSTEM VARS
00001124                           349  ; NOTE THAT ALL THESE VARS ARE USED TO SHARE DATA FROM SYSTEM TO USER. THUS
00001124                           350  ; THEY MUST NOT BE IN PROTECTED MEMORY.
00001124                           351  ; NOTE THAT USING DMMDATA IN SUCH WAY IS A BAD IDEA, AS USER APPLICATIONS CAN
00001124                           352  ; ALSO FREE OR CHANGE OWNERSHIP. NONETHELESS, FOR THE SAKE OF THIS EXAMPLE
00001124                           353  ; THIS IS GOOD ENOUGH.
00001124                           354  ; =============================================================================
00001124                           355  
00001124                           356  ; --- KEYBOARD RELATED VARIABLES ----------------------------------------------
00001124                           357  
00001124                           358  KBDVAL      DS.B    1                       ; KEY PRESSED=1
00001125                           359  KBDEDGE     DS.B    1                       ; KEY CHANGED=1
00001126                           360  
00001126                           361              DS.W    0
00001126                           362  
00001126                           363  ; --- SCREEN RELATED VARIABLES ------------------------------------------------
00001126                           364  
00001126                           365  SCRINTCT    DS.B    1                       ; INTERRUPT COUNTER/FLAG
00001127                           366  SCRCYCCT    DS.B    1                       ; CYCLE COUNTER
00001128                           367              DS.W    0
00001128                           368  
00001128                           369  ; --- DYNAMIC MEMORY VARIABLES ------------------------------------------------
00001128                           370  
00001140                           371              ORG     (*+DMMBSIZE-1)&-DMMBSIZE ; ALIGN TO DMMBSIZE
00001140                           372  DMMDATA     DS.B    DMMBSIZE*DMMBNUM        ; DYNAMIC MEMORY ALLOCATION SPACE
00001DC0                           373              DS.W    0                       ; JUST IN CASE (SIZE IS POW OF TWO)
00001DC0                           374  
00001DC0                           375  
00001DC0                           376  -------------------- end include --------------------
00001DC0                           377              INCLUDE "VAR.X68"
00001DC0                           378  ; =============================================================================
00001DC0                           379  ; GAME VARS
00001DC0                           380  ; =============================================================================
00001DC0                           381  
00001DC0                           382  ; TO DO: DECLARE GAME VARIABLES HERE.
00001DC0                           383  -------------------- end include --------------------
00001DC0                           384              END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
DMMALLOC            10D8
DMMALLOC:END        10F0
DMMBNUM             32
DMMBSIZE            40
DMMDATA             1140
DMMFCOM             10B2
DMMFFND             10C0
DMMFIRST            1068
DMMFLOOP            10A6
DMMFRCOM            107A
DMMFREE             10F2
DMMFRFND            1088
DMMFRLOP            106E
DMMFRSTO            10A0
DMMINIT             1046
DMMINIT:LOOP        1054
DMMNEXT             108A
DMMNEXTO            10C2
DMMSYSID            0
KBDBITDN            3
KBDBITF1            4
KBDBITF2            5
KBDBITF3            6
KBDBITLF            0
KBDBITPS            7
KBDBITRT            2
KBDBITUP            1
KBDCHRDN            28
KBDCHRLF            25
KBDCHRMK            4D
KBDCHRPK            50
KBDCHRRT            27
KBDCHRSH            10
KBDCHRSP            20
KBDCHRUP            26
KBDDOWN             28
KBDEDGE             1125
KBDFIRE1            20
KBDFIRE2            4D
KBDFIRE3            10
KBDINIT             102E
KBDLEFT             25
KBDMSKDN            8
KBDMSKF1            10
KBDMSKF2            20
KBDMSKF3            40
KBDMSKLF            1
KBDMSKPS            80
KBDMSKRT            4
KBDMSKUP            2
KBDPAUSE            50
KBDREAD             1044
KBDRIGHT            27
KBDTRAP             0
KBDUP               26
KBDVAL              1124
SCRCYCCT            1127
SCRHEIGH            1E0
SCRINIT             101C
SCRINTCT            1126
SCRIRQ              1
SCRISR              101E
SCRTIM              14
SCRTRAP             1
SCRUPD              102C
SCRWIDTH            280
START               1108
START:LOOP          110C
START:WINT          110E
SYSINIT             1000
